// <auto-generated />
using Health_Insurance.Data.EntityFramework.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Health_Insurance.Data.Migrations
{
    [DbContext(typeof(MigrationDataContext))]
    [Migration("20240506214627_ChangePremiumCoefficientType")]
    partial class ChangePremiumCoefficientType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Health_Insurance.Domain.Entities.Coverage", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("Id"), 1L, 1);

                    b.Property<decimal>("MaximumAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinimumAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PremiumCoefficient")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Coverages");
                });

            modelBuilder.Entity("Health_Insurance.Domain.Entities.InsuranceRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal>("Capital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("TotalPremium")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("InsuranceRequests");
                });

            modelBuilder.Entity("Health_Insurance.Domain.Entities.InsuranceRequestCoverage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<byte>("CoverageId")
                        .HasColumnType("tinyint");

                    b.Property<long>("InsuranceRequestId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CoverageId");

                    b.HasIndex("InsuranceRequestId");

                    b.ToTable("InsuranceRequestCoverages");
                });

            modelBuilder.Entity("Health_Insurance.Domain.Entities.InsuranceRequestCoverage", b =>
                {
                    b.HasOne("Health_Insurance.Domain.Entities.Coverage", "Coverage")
                        .WithMany("InsuranceRequestCoverages")
                        .HasForeignKey("CoverageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Health_Insurance.Domain.Entities.InsuranceRequest", "InsuranceRequest")
                        .WithMany("InsuranceRequestCoverages")
                        .HasForeignKey("InsuranceRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coverage");

                    b.Navigation("InsuranceRequest");
                });

            modelBuilder.Entity("Health_Insurance.Domain.Entities.Coverage", b =>
                {
                    b.Navigation("InsuranceRequestCoverages");
                });

            modelBuilder.Entity("Health_Insurance.Domain.Entities.InsuranceRequest", b =>
                {
                    b.Navigation("InsuranceRequestCoverages");
                });
#pragma warning restore 612, 618
        }
    }
}
